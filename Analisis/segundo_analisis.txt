Relaciones entre Luchador (1) e InventarioLuchadores (1..25):

1.1. Al agregar luchadores al ArrayList "luchadores" se requiere llamar al constructor de Luchador.
1.2. Al filtar luchadores (sea faccion o rango) se requiere llamar getters de los atributoa en la clase Luchador.
1.3. Al mostrar caracteristicas de luchadores (de todos o de uno en particular) se requiere llamar getters de los atributos en la clase Luchador.
1.4. Al eliminar luchadores también hay una relación dado que, dentro del metodo se llama a MostrarAllLuchadores() a fin de poder visualizar lo que hay para eliminar.

Relaciones entre ObjetoEquipable (1) e InventarioObjetos (0..10):

2.1. Al agregar objetosEquipables al ArrayList "objetos" se requiere llamar al constructor de ObjetoEquipable.
2.2. Al mostrar caracteristicas de objetos (de todos o de uno en particular) se requiere llamar getters de los atributos en la clase ObjetoEquipable.
2.3. Al filtar objetos por rango, se requiere llamar getters de los atributoa en la clase ObjetoEquipable.
2.4. Al eliminar objetos también hay una relación dado que, dentro del metodo se llama a MostrarAllObjetos() a fin de poder visualizar lo que hay para eliminar.

Relaciones entre Monstruo (3) y ObjetoEquipable (1) :

3.1. Al crear un ObjetoEquipable, dado que según el instructivo del juego el Monstruo cuenta con tres, CrearObjetos(), al mostrar sus caracteristicas y al DropearObjetos().

Relaciones entre IO y las demás clases:

4.1. Relaciones al leer datos ingresados por el usuario.
4.2. Relaciones al realizar conversiones de datos.
4.3. Relaciones al mostrar por pantalla alguna información.

Relaciones entre Batalla y Luchador:

5.1 Se requieren entre 1 y 6 luchadores para enfrentar a un Monstruo en combate.

Relaciones entre Batalla y Monstruo:

6.1 Se requiere 1 monstruo para enfrentar a el o los luchadores en combate.